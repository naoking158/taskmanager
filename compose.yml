name: taskmanager
services:
  nginx:
    image: nginx:1.26
    volumes:
      - ./etc/favicon.ico:/favicon.ico
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
    networks:
      - my_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
    networks:
      - my_network 
    init: true
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 2g

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NUXT_PUBLIC_API_BASE=${NUXT_PUBLIC_API_BASE}
      - NITRO_HOST=0.0.0.0
      - NITRO_PORT=${FRONTEND_PORT}
    networks:
      my_network:
        aliases:
          - frontend
    init: true

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - my_network

volumes:
  postgres:

networks:
  my_network:
